     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 1400                        a dw 20
    14 00000002 1E00                        b dw 30
    15 00000004 2800                        c dw 40
    16 00000006 3200                        d dw 50
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; (c + d) + (a - b) + a = (40 + 50) + (20 - 30) + 20 = 90 - 10 + 20 = 100
    22 00000000 66A1[04000000]                  mov ax, [c] ; ax = c
    23 00000006 660305[06000000]                add ax, [d] ; ax = ax + d = c + d
    24                                          
    25 0000000D 668B1D[00000000]                mov bx, [a] ; bx = a
    26 00000014 662B1D[02000000]                sub bx, [b] ; bx = a - b
    27                                          
    28 0000001B 6601D8                          add ax, bx  ; ax = ax + bx = (c + d) + (a - b)
    29                                          
    30 0000001E 660305[04000000]                add ax, [c] ; ax = ax + c = (c + d) + (a - b) + c
    31 00000025 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    32 00000027 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
