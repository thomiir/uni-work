     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 0A                          a db 10
    14 00000001 14                          b db 20
    15 00000002 28                          c db 40
    16 00000003 1E                          d db 30
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ;(a + d - c) - (b + b) = (10 + 30 - 40) - (20 + 20) = 0 - 40 = -40
    22 00000000 A0[00000000]                    mov al, [a] ; al = a
    23 00000005 0205[03000000]                  add al, [d] ; al = al + d = a + d  
    24 0000000B 2A05[02000000]                  sub al, [c] ; al = al - c = a + d - c
    25                                          
    26 00000011 8A1D[01000000]                  mov bl, [b] ; bl = b
    27 00000017 021D[01000000]                  add bl, [b] ; bl = bl + b = b + b
    28                                          
    29 0000001D 28D8                            sub al, bl ; al = al - bl = (a + d - c) - (b + b) 
    30                                          
    31 0000001F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    32 00000021 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
