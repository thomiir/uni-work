     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 03                          a db 3
    14 00000001 05                          b db 5
    15 00000002 03                          c db 3
    16 00000003 0800                        d dw 8
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ; (d - b * c + b * 2) / a = (8 - 5 * 3 + 5 * 2) / 3 = (8 - 15 + 10) / 3 = 3 / 3 = 1
    21 00000000 668B1D[03000000]                mov bx, [d]  ; bx = d
    22                                          
    23 00000007 A0[01000000]                    mov al, [b]  ; al = b
    24 0000000C F625[02000000]                  mul byte [c] ; ax = ax * c = b * c
    25                                          
    26 00000012 6629C3                          sub bx, ax   ; bx = bx - ax = d - b * c
    27                                          
    28 00000015 A0[01000000]                    mov al, [b]  ; al = b
    29 0000001A B102                            mov cl, 2
    30 0000001C F6E1                            mul byte cl   ; ax = b * 2
    31                                          
    32 0000001E 6601C3                          add bx, ax   ; bx = bx + ax = d - b * c + b * 2
    33                                          
    34 00000021 6689D8                          mov ax, bx   ; ax = bx = d - b * c + b * 2
    35                                          
    36 00000024 8A1D[00000000]                  mov bl, [a]  ; bl = a
    37                                  
    38 0000002A F6F3                            div byte bl
    39                                          
    40 0000002C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    41 0000002E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
