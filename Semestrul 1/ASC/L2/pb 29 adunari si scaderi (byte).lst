     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 14                          a db 20
    14 00000001 1E                          b db 30 
    15 00000002 28                          c db 40
    16 00000003 32                          d db 50
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; (b + c) + (a + b - d) = (30 + 40) + (20 + 30 - 50) = 70 + 0 = 70
    22 00000000 A0[01000000]                    mov al, [b] ; al = b
    23 00000005 0205[02000000]                  add al, [c] ; al = al + c = b + c
    24                                          
    25 0000000B 8A1D[00000000]                  mov bl, [a] ; bl = a
    26 00000011 021D[01000000]                  add bl, [b] ; bl = bl + b = a + b
    27 00000017 2A1D[03000000]                  sub bl, [d] ; bl = bl - d = a + b - d
    28                                          
    29 0000001D 00D8                            add al, bl ; al = al + bl = (b + c) + (a + b - d)
    30                                      
    31                                          ; exit(0)
    32 0000001F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    33 00000021 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
