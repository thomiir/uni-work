     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 01                          a db 1
    14 00000001 0200                        b dw 2
    15 00000003 03000000                    c dd 3
    16                                  
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ;c - b - (a + a) - b = 3 - 2 - (1 + 1) = 1 - 2 = -1
    21 00000000 66A1[01000000]                  mov ax, [b]
    22 00000006 98                              cwde ; eax = b
    23 00000007 8B1D[03000000]                  mov ebx, [c]
    24 0000000D 29C3                            sub ebx, eax ; ebx = ebx - eax = c - b
    25                                          
    26 0000000F A0[00000000]                    mov al, [a]
    27 00000014 0205[00000000]                  add al, [a]  ; al = a + a
    28                                          
    29 0000001A 6698                            cbw
    30 0000001C 98                              cwde ; eax = a + a
    31                                          
    32 0000001D 29C3                            sub ebx, eax ; ebx = c - b - (a + a)
    33                                          
    34 0000001F B800000000                      mov eax, 0
    35 00000024 66A1[01000000]                  mov ax, [b] ; eax = b
    36                                          
    37 0000002A 29C3                            sub ebx, eax ; ebx = c - b - (a + a) - b
    38                                          ; exit(0)
    39 0000002C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    40 0000002E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
